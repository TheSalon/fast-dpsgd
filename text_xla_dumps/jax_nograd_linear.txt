HloModule jit_fn1.8

%scalar_add_computation (scalar_lhs: f32[], scalar_rhs: f32[]) -> f32[] {
  %scalar_lhs = f32[] parameter(0)
  %scalar_rhs = f32[] parameter(1)
  ROOT %add = f32[] add(f32[] %scalar_lhs, f32[] %scalar_rhs)
}

%fused_computation (param_0.1: f32[5], param_1.2: f32[5,5], param_2.2: f32[5]) -> f32[5] {
  %param_1.2 = f32[5,5]{1,0} parameter(1)
  %param_2.2 = f32[5]{0} parameter(2)
  %broadcast.1 = f32[5,5]{1,0} broadcast(f32[5]{0} %param_2.2), dimensions={1}
  %multiply.1 = f32[5,5]{1,0} multiply(f32[5,5]{1,0} %param_1.2, f32[5,5]{1,0} %broadcast.1)
  %constant_1 = f32[] constant(0)
  %reduce.1 = f32[5]{0} reduce(f32[5,5]{1,0} %multiply.1, f32[] %constant_1), dimensions={1}, to_apply=%scalar_add_computation, metadata={op_type="dot_general" op_name="jit(fn1)/dot_general[ dimension_numbers=(((1,), (0,)), ((), ()))\n                      precision=None ]" source_file="<ipython-input-3-8e7c515249a1>" source_line=3}
  %param_0.1 = f32[5]{0} parameter(0)
  ROOT %add.1 = f32[5]{0} add(f32[5]{0} %reduce.1, f32[5]{0} %param_0.1), metadata={op_type="add" op_name="jit(fn1)/add" source_file="<ipython-input-3-8e7c515249a1>" source_line=3}
}

ENTRY %jit_fn1.8 (parameter.1: f32[5,5], parameter.2: f32[5], parameter.3: f32[5]) -> (f32[5]) {
  %parameter.3 = f32[5]{0} parameter(2)
  %parameter.1 = f32[5,5]{1,0} parameter(0)
  %parameter.2 = f32[5]{0} parameter(1)
  %fusion = f32[5]{0} fusion(f32[5]{0} %parameter.3, f32[5,5]{1,0} %parameter.1, f32[5]{0} %parameter.2), kind=kLoop, calls=%fused_computation, metadata={op_type="add" op_name="jit(fn1)/add" source_file="<ipython-input-3-8e7c515249a1>" source_line=3}
  ROOT %tuple.7 = (f32[5]{0}) tuple(f32[5]{0} %fusion)
}

